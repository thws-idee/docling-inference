name: Build and push image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_ID: ghcr.io/${{ github.repository_owner }}/docling-inference

jobs:
  push-cuda:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Docker login
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    # Use buildx which can cache docker layers between runs
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Build and push cuda version
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ env.IMAGE_ID }}:latest
          ${{ env.IMAGE_ID }}:${{ github.sha }}
          ${{ env.IMAGE_ID }}:${{ github.ref_name }}
        cache-from: type=registry,ref=${{ env.IMAGE_ID }}:buildcache
        cache-to: type=registry,ref=${{ env.IMAGE_ID }}:buildcache,mode=max

  push-cpu:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Docker login
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    # Use buildx which can cache docker layers between runs
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Build and push cpu version
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        file: Dockerfile.cpu
        tags: |
          ${{ env.IMAGE_ID }}:cpu-latest
          ${{ env.IMAGE_ID }}:cpu-${{ github.sha }}
          ${{ env.IMAGE_ID }}:cpu-${{ github.ref_name }}
        cache-from: type=registry,ref=${{ env.IMAGE_ID }}:cpu-buildcache
        cache-to: type=registry,ref=${{ env.IMAGE_ID }}:cpu-buildcache,mode=max
